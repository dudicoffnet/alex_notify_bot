import asyncio
from aiogram import Bot, Dispatcher, Router
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, FSInputFile
import os
import logging
from datetime import datetime
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas

BOT_TOKEN = os.getenv("BOT_TOKEN", "your_token_here")
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

@router.message(commands=["start", "ping"])
async def start_handler(message: Message):
    await message.answer("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ñ–¥—É –∫–æ–º–∞–Ω–¥—É /report")

@router.message(commands=["report"])
async def report_handler(message: Message):
    file_path = await create_pdf_report()
    await message.answer_document(document=FSInputFile(file_path), caption="üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç—á—ë—Ç")

async def create_pdf_report():
    filename = f"report_20250905_225008.pdf"
    file_path = f"/tmp/{filename}"
    c = canvas.Canvas(file_path, pagesize=A4)
    c.setFont("Helvetica", 12)
    lines = 'üìÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç\n–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: 2025-09-05 22:50:08\n\nüå¥ –§–£–ö–£–û–ö:\n‚Äî –ë–∏–ª–µ—Ç—ã: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–∏–Ω—Å–∫‚Äî–§—É–∫—É–æ–∫ (—á–µ—Ä–µ–∑ –°—Ç–∞–º–±—É–ª, –î—É–±–∞–π, –ë–∞–Ω–≥–∫–æ–∫).  \n‚Äî –ñ–∏–ª—å—ë: –±—É–Ω–≥–∞–ª–æ —Å –∫—É—Ö–Ω–µ–π, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω.  \n‚Äî –ê—Ä–µ–Ω–¥–∞ –±–∞–π–∫–∞, –≤–∏–∑–æ–≤—ã–µ –Ω—é–∞–Ω—Å—ã, –º–µ—Å—Ç–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞.\n\nüèö –°–ù–û–° –î–û–ú–ê:\n‚Äî –ê–¥—Ä–µ—Å: –ú–∏–Ω—Å–∫, —É–ª. –ú–∏—Ä–Ω–∞—è, –¥. 32.  \n‚Äî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–π.\n\nüí∏ –ó–ê–†–ê–ë–û–¢–û–ö:\n‚Äî Airdrops: LayerZero, zkSync, StarkNet, Base –∏ –¥—Ä.  \n‚Äî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—Ä–∏–ø—Ç–æ-–ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Ç–µ—Å—Ç–Ω–µ—Ç–æ–≤.  \n‚Äî –ú–µ–¥–Ω—ã–π –ø–æ—Ä–æ—à–æ–∫: –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∞.\n\nüì¶ ZIP-–ê–†–•–ò–í–´:\n‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –∞—Ä—Ö–∏–≤–æ–≤ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.  \n‚Äî –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –Ω—É–º–µ—Ä–∞—Ü–∏—è (v1, v2, ‚Ä¶).\n\nüß† –í–ï–ß–ï–†–ù–ò–ô –í–û–ü–†–û–°:\n‚Äî –ß—Ç–æ –≤–∞–∂–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∑–∞ –¥–µ–Ω—å?\n\n‚úÖ –°–¢–ê–¢–£–°–´ –ó–ê–î–ê–ß:\n‚Äî bot_sichas_prod: –≤ —Ä–∞–±–æ—Ç–µ, –≤–Ω–µ–¥—Ä—è–µ—Ç—Å—è –∞–Ω–∫–µ—Ç–∞, –º–µ–Ω—é.  \n‚Äî alex_notify_bot: —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏–¥—ë—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—Ç—á—ë—Ç–∞.\n'.split("\n")
    y = 800
    for line in lines:
        c.drawString(50, y, line)
        y -= 18
        if y < 50:
            c.showPage()
            c.setFont("Helvetica", 12)
            y = 800
    c.save()
    return file_path

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
